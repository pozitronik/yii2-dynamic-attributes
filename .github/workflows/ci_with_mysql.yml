name: CI with MySQL
on:
  pull_request:
    branches: [ master ]

env:
  DB_DSN: "mysql:host=127.0.0.1;port=5432;dbname=yii2-dynamic-attributes"
  DB_USER: "root"
  DB_PASS: "password"
  MYSQL_HOST: 127.0.0.1
  MYSQL_DATABASE: "yii2-dynamic-attributes"
  MYSQL_USER: root
  MYSQL_PASSWORD: password
  MYSQL_ROOT_PASSWORD: "password"


jobs:
  build:
    name: PHP ${{ matrix.php }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        php:
          - 8.0
        mysql-version: 8.0
    services:
      mysql:
        image: mysql:8
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 33306:3306
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: "yii2-dynamic-attributes"
          MYSQL_USER: root
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.
        with:
          mysql-version: ${{ matrix.mysql-version }}
          database: "yii2-dynamic-attributes"
      - run: mysql --version
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: imagick, pdo_pgsql, opcache
          ini-values: opcache.enable=1, opcache.enable_cli=1, apc.enable_cli=1
        env:
          COMPOSER_TOKEN: ${{ secrets.COMPOSER_GITHUB_TOKEN }}

      - name: Check php and composer
        run: php -v && composer --version

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install

      - name: Prepare test
        run: cp tests/.env.example tests/.env

      - name: Run tests
        run: vendor/bin/codecept run
        env:
          COMPOSER_TOKEN: ${{ secrets.COMPOSER_GITHUB_TOKEN }}